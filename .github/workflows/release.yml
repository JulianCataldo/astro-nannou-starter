name: Deploy — [Demo]

on:
  push:
    branches: [master]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        # with:
        #   ref: ${{ github.ref }}

      # ————————————————————————————————————————————————————————————————————————

      - name: Cache Rust, Cargo installations
        # uses: actions/cache@v3
        uses: actions/cache@v3
        with:
          path: |
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
            ~/.rustup/settings.toml
          key: toolchain-${{ hashFiles('rust-toolchain') }}

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'

      - name: Install Rust dependencies
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: rsw

      # ————————————————————————————————————————————————————————————————————————

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # ————————————————————————————————————————————————————————————————————————

      - name: Setup PNPM 7
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.9.0
          run_install: false

      - name: Get PNPM store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Setup PNPM cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # ————————————————————————————————————————————————————————————————————————

      - name: Install Node dependencies
        # `NODE_ENV=production` to exclude dev. dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build Crates
        run: rsw build

      - name: Build Astro Website
        run: pnpm build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-20.04
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
